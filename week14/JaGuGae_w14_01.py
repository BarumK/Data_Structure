"""
-그래프(graph)의 개요
그래프는 연결되어 있는 원소 간의 관계를 표현할 수 있는 자료구조로서, 인터넷, 도로망, 운송, 전력, 상하수도망, 신경망, 화학성분 결합,
단백질 네트워크, 금융 네트워크, 소셜 네트워크 분석 등의 광범위한 분야에서 활용

-그래프의 용어(terminology)
그래프는 연결할 원소를 나타내는 정점(Vertex)과 정점을 연결하는 간선(Edge)의 집합으로 하나의 간선은 한 개 혹은 두 개의 정점을 연결
그래프는 G = (V, E)로 표현, 여기서 V = 정점의 집합, E = 간선의 집합
무방향 그래프(Undirected Graph): 간선에 방향이 없는 그래프
방향 그래프(Directed Graph): 간선에 방향이 있는 그래프, 정점들 간의 순서가 중요
차수(Degree): 특정 정점의 인접한 정점들의 수
    방향 그래프에서는 차수를 진입 차수(In-degree)와 진출 차수(Out-degree)로 구분
경로(Path)는 시작 정점 u로부터 도착 정점 v에 이르기까지의 정점들을 나열하여 표현
단순 경로(Simple Path): 모두 다른 정점으로 구성된 경로
    즉, 경로 상의 정점들이 모두 다른 경우
    일반적인 경로는 동일한 정점을 중복하는 경우를 포함
싸이클(Cycle): 시작 정점과 도착 정점이 동일한 단순 경로
연결성(Connectivity): 그래프에서 서로 다른 모든 쌍의 정점들 사이에 경로가 존재하는 그래프를 연결 그래프(Connected Graph)라고 하며,
                    연결되지 않은 정점이 존재하는 그래프를 단절 그래프(Disconnected Graph)라고 함
연결 성분(Connected Component): 그래프에서 정점들이 서로 연결되어 있는 부분
가중치(Weighted) 그래프: 간선에 가중치가 부여된 그래프
    가중치는 두 정점 a와 b 사이의 공간적 거리, 특정 개체가 정점 a에서 출발하여 정점 b에 도착하기까지 걸린 시간 혹은 비용도 될 수 있으며, 음수인 경우도 존재
부분그래프(Subgraph): 주어진 그래프의 정점과 간선의 일부분(집합)으로 이루어진 그래프
    그래프 G = (V, E)가 주어졌을 때, V’ ⊆ V이고 E’ ⊆ E인 그래프 G’ = (V’, E’)를 G의 부분그래프라고 부름
    따라서 부분그래프는 원래의 그래프에 없는 정점이나 간선을 포함하지 않음
트리(Tree): 싸이클이 없는 그래프
신장트리(Spanning Tree): 주어진 그래프 G가 하나의 연결성분으로 구성되어 있을 때, 그래프의 모든 정점들을 싸이클 없이 연결하는 부분그래프
    하나의 연결성분으로 구성된 그래프 G = (V, E)가 주어졌을 때, 사이클이 존재하지 않고 V’ = V 및 E’ ⊆ E인 그래프 G’ = (V’, E’)를 신장트리라고 부름

-그래프의 (물리적) 구현
인접 행렬(Adjacency Matrix)과 인접 리스트(Adjacency List)로 표현
인접 행렬
    N 개의 정점을 가진 그래프의 인접 행렬은 2차원 N × N (Python) 리스트에 저장
    리스트가 G라면, 정점들을 0, 1, 2,…, N-1로 하여, 정점 i와 j 사이에 간선이 없으면 G[i][j] = 0, 간선이 있으면 G[i][j] = 1로 표현(가중치 그래프는 1 대신 가중치 저장)
인접 리스트
    각 정점마다 1 개의 (Python) 리스트 and/or 단순 연결 리스트를 이용하여 인접한 각 정점을 저장
    실세계의 그래프는 대부분 정점의 평균 차수가 작은 희소 그래프(Sparse Graph)이므로 그래프를 표현할 때 주로 인접 리스트를 사용

-그래프 탐색
그래프에서는 깊이 우선 탐색(DFS: Depth First Search)과 너비 우선 탐색(BFS: Breadth First Search) 방식으로 모든 정점을 방문

-깊이 우선 탐색(DFS)
DFS 과정
    1. 그래프 G에 대하여 DFS는 임의의 정점 a에서 시작하여 이웃하는 하나의 정점 b를 방문하고, 방금 방문한 정점 b의 이웃 정점 c를 방문하는 방식으로 진행하며,
    2. 특정 정점(예: c)의 이웃하는 정점들을 모두 방문한 경우에는 이전 정점(예: b)으로 되돌아 가서(Backtrack) 탐색을 수행하는 방식으로 진행

-너비 우선 탐색(BFS) – 이진 트리에서의 레벨 순회와 유사
(DFS와) BFS의 수행 시간 분석
    DFS와 BFS의 수행 시간은 탐색이 각 정점을 한번씩 방문하며, 각 간선을 한번씩만 사용하여 탐색하기 때문에 O(N+M), 여기서 N은 그래프의 정점의 수이고, M은 간선의 수
    DFS와 BFS는 정점의 방문 순서나 간선을 사용하는 순서만 다를 뿐임
"""